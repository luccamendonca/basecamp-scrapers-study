package main

import (
	"encoding/json"
	"fmt"
	"os"
	"sort"
	"strconv"
	"strings"

	"github.com/alecthomas/repr"
	"github.com/bmaupin/go-epub"
	"github.com/gocolly/colly"
	"golang.org/x/exp/slices"
)

const baseURL = "https://basecamp.com"

type Book struct {
	Summary     Summary  `json:"summary"`
	Title       string   `json:"title"`
	Authors     []string `json:"authors"`
	Description string   `json:"description"`
}

type Summary struct {
	Sections map[int]Section `json:"sections"`
}

type Section struct {
	Number   int             `json:"number"`
	Title    string          `json:"title"`
	Chapters map[int]Chapter `json:"chapters"`
}

type Chapter struct {
	Number  int    `json:"number"`
	Title   string `json:"title"`
	Content string `json:"content"`
	URL     string `json:"url"`
}

var global_book = Book{
	Title:       "Getting Real",
	Description: "The smarter, faster, easier way to build a successful web application",
	Summary: Summary{
		Sections: map[int]Section{
			1: Section{
				Number: 1,
				Title:  "Introduction",
				Chapters: map[int]Chapter{
					1: Chapter{
						Number:  1,
						Title:   "What is Getting Real",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <p>Want to build a successful web app? Then it’s time to Get Real. Getting Real is a smaller, faster, better way to build software.</p>\n\n<ul>\n  <li>Getting Real is about skipping all the stuff that represents real (charts, graphs, boxes, arrows, schematics, wireframes, etc.) and actually building the real thing.</li>\n  <li>Getting real is less. Less mass, less software, less features, less paperwork, less of everything that’s not essential (and most of what you think is essential actually isn’t).</li>\n  <li>Getting Real is staying small and being agile.</li>\n  <li>Getting Real starts with the interface, the real screens that people are going to use. It begins with what the customer actually experiences and builds backwards from there. This lets you get the interface right before you get the software wrong.</li>\n  <li>Getting Real is about iterations and lowering the cost of change. Getting Real is all about launching, tweaking, and constantly improving which makes it a perfect approach for web-based software.</li>\n  <li>Getting Real delivers just what customers need and eliminates anything they don’t.</li>\n</ul>\n\n<h2 id=\"the-benefits-of-getting-real\">The benefits of Getting Real</h2>\n\n<p>Getting Real delivers better results because it forces you to deal with the actual problems you’re trying to solve instead of your ideas about those problems. It forces you to deal with reality.</p>\n\n<p>Getting Real foregoes functional specs and other transitory documentation in favor of building real screens. A functional spec is make-believe, an illusion of agreement, while an actual web page is reality. That’s what your customers are going to see and use. That’s what matters. Getting Real gets you there faster. And that means you’re making software decisions based on the real thing instead of abstract notions.</p>\n\n<p>Finally, Getting Real is an approach ideally suited to web-based software. The old school model of shipping software in a box and then waiting a year or two to deliver an update is fading away. Unlike installed software, web apps can constantly evolve on a day-to-day basis. Getting Real leverages this advantage for all its worth.</p>\n\n<div class=\"page-break\"></div>\n<h3 id=\"how-to-write-vigorous-software\">How To Write Vigorous Software</h3>\n\n<blockquote>\n  <p>Vigorous writing is concise. A sentence should contain no unnecessary words, a paragraph no unnecessary sentences, for the same reason that a drawing should have no unnecessary lines and a machine no unnecessary parts. This requires not that the writer make all sentences short or avoid all detail and treat subjects only in outline, but that every word tell.</p>\n</blockquote>\n\n<p>—From <a href=\"http://www.bartleby.com/141/strunk5.html\">“The Elements of Style”</a> by William Strunk Jr.</p>\n\n<h2 id=\"no-more-bloat\">No more bloat</h2>\n\n<p>The old way: a lengthy, bureaucratic, we’re-doing-this-to-cover-our-asses process. The typical result: bloated, forgettable software dripping with mediocrity. Blech.</p>\n\n<h2 id=\"getting-real-gets-rid-of\">Getting Real gets rid of…</h2>\n\n<ul>\n  <li>Timelines that take months or even years</li>\n  <li>Pie-in-the-sky functional specs</li>\n  <li>Scalability debates</li>\n  <li>Interminable staff meetings</li>\n  <li>The “need” to hire dozens of employees</li>\n  <li>Meaningless version numbers</li>\n  <li>Pristine roadmaps that predict the perfect future</li>\n  <li>Endless preference options</li>\n  <li>Outsourced support</li>\n  <li>Unrealistic user testing</li>\n  <li>Useless paperwork</li>\n  <li>Top-down hierarchy</li>\n</ul>\n\n<p>You don’t need tons of money or a huge team or a lengthy development cycle to build great software. Those things are the ingredients for slow, murky, changeless applications. Getting real takes the opposite approach.</p>\n\n<h2 id=\"in-this-book-well-show-you\">In this book we’ll show you…</h2>\n\n<ul>\n  <li>The importance of having a philosophy</li>\n  <li>Why staying small is a good thing</li>\n  <li>How to build less</li>\n  <li>How to get from idea to reality quickly</li>\n  <li>How to staff your team</li>\n  <li>Why you should design from the inside out</li>\n  <li>Why writing is so crucial</li>\n  <li>Why you should underdo your competition</li>\n  <li>How to promote your app and spread the word</li>\n  <li>Secrets to successful support</li>\n  <li>Tips on keeping momentum going after launch</li>\n  <li>…and lots more</li>\n</ul>\n\n<p>The focus is on big-picture ideas. We won’t bog you down with detailed code snippets or css tricks. We’ll stick to the major ideas and philosophies that drive the Getting Real process.</p>\n\n<h2 id=\"is-this-book-for-you\">Is this book for you?</h2>\n\n<p>You’re an entrepreneur, designer, programmer, or marketer working on a big idea.</p>\n\n<p>You realize the old rules don’t apply anymore. Distribute your software on cd-roms every year? How 2002. Version numbers? Out the window. You need to build, launch, and tweak. Then rinse and repeat.</p>\n\n<p>Or maybe you’re not yet on board with agile development and business structures, but you’re eager to learn more.</p>\n\n<p><strong>If this sounds like you, then this book is for you.</strong></p>\n\n<p>Note: While this book’s emphasis is on building a web app, a lot of these ideas are applicable to non-software activities too. The suggestions about small teams, rapid prototyping, expecting iterations, and many others presented here can serve as a guide whether you’re starting a business, writing a book, designing a web site, recording an album, or doing a variety of other endeavors. Once you start Getting Real in one area of your life, you’ll see how these concepts can apply to a wide range of activities.</p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/01.1-what-is-getting-real",
					},
					2: Chapter{
						Number:  2,
						Title:   "About Basecamp",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"what-we-do\">What we do</h2>\n\n<p>Basecamp is a small team that creates simple, focused software. Our products help you collaborate and get organized. Millions of people and small businesses use our web-apps to get things done. Jeremy Wagstaff, of the Wall Street Journal, wrote, “[Basecamp] products are beautifully simple, elegant and intuitive tools that make an Outlook screen look like the software equivalent of a torture chamber.” Our apps never put you on the rack.</p>\n\n<h2 id=\"our-modus-operandi\">Our modus operandi</h2>\n\n<p>We believe software is too complex. Too many features, too many buttons, too much to learn. Our products do less than the competition — intentionally. We build products that work smarter, feel better, allow you to do things your way, and are easier to use.</p>\n\n<h2 id=\"our-products\">Our products</h2>\n\n<p><a href=\"https://basecamp.com/\">Basecamp</a> turns project management on its head. Instead of Gantt charts, fancy graphs, and stats-heavy spreadsheets, Basecamp offers message boards, to-do lists, simple scheduling, collaborative writing, and file sharing. So far, hundreds of thousands agree it’s a better way. Farhad Manjoo of Salon.com said “Basecamp represents the future of software on the Web.”</p>\n\n<p><a href=\"https://hey.com/\">HEY</a> is a ground up reinvention of email. HEY’s fresh approach transforms email into something you want to use instead of something you’re forced to deal with.</p>\n\n<p><a href=\"https://rubyonrails.org/\">Ruby on Rails</a>, for developers, is a full-stack, open-source web framework in Ruby for writing real-world applications quickly and easily. Rails takes care of the busy work so you can focus on your idea. Nathan Torkington of the O’Reilly publishing empire said “Ruby on Rails is astounding. Using it is like watching a kung-fu movie, where a dozen bad-ass frameworks prepare to beat up the little newcomer only to be handed their asses in a variety of imaginative ways.” Gotta love that quote.</p>\n\n<p>You can find out more about our products and our company on our web site at <a href=\"https://basecamp.com/\">basecamp.com</a>.</p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/01.2-about-basecamp",
					},
					3: Chapter{
						Number:  3,
						Title:   "Caveats, disclaimers, and other preemptive strikes",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <p>Just to get it out of the way, here are our responses to some complaints we hear every now and again:</p>\n\n<h2 id=\"these-techniques-wont-work-for-me\">“These techniques won’t work for me.”</h2>\n\n<p>Getting real is a system that’s worked terrifically for us. That said, the ideas in this book won’t apply to every project under the sun. If you are building a weapons system, a nuclear control plant, a banking system for millions of customers, or some other life/finance-critical system, you’re going to balk at some of our laissez-faire attitude. Go ahead and take additional precautions.</p>\n\n<p>And it doesn’t have to be an all or nothing proposition. Even if you can’t embrace Getting Real fully, there are bound to be at least a few ideas in here you can sneak past the powers that be.</p>\n\n<h2 id=\"you-didnt-invent-that-idea\">“You didn’t invent that idea.”</h2>\n\n<p>We’re not claiming to have invented these techniques. Many of these concepts have been around in one form or another for a long time. Don’t get huffy if you read some of our advice and it reminds you of something you read about already on so and so’s weblog or in some book published 20 years ago. It’s definitely possible. These techniques are not at all exclusive to Basecamp. We’re just telling you how we work and what’s been successful for us.</p>\n\n<h2 id=\"you-take-too-much-of-a-black-and-white-view\">“You take too much of a black and white view.”</h2>\n\n<p>If our tone seems too know-it-allish, bear with us. We think it’s better to present ideas in bold strokes than to be wishy-washy about it. If that comes off as cocky or arrogant, so be it. We’d rather be provocative than water everything down with “it depends…” Of course there will be times when these rules need to be stretched or broken. And some of these tactics may not apply to your situation. Use your judgement and imagination.</p>\n\n<h2 id=\"this-wont-work-inside-my-company\">“This won’t work inside my company.”</h2>\n\n<p>Think you’re too big to Get Real? Even Microsoft is Getting Real (and we doubt you’re bigger than them).</p>\n\n<p>Even if your company typically runs on long-term schedules with big teams, there are still ways to get real. The first step is to break up into smaller units. When there’s too many people involved, nothing gets done. The leaner you are, the faster — and better — things get done.</p>\n\n<p>Granted, it may take some salesmanship. Pitch your company on the Getting Real process. Show them this book. Show them the real results you can achieve in less time and with a smaller team.</p>\n\n<p>Explain that Getting Real is a low-risk, low-investment way to test new concepts. See if you can split off from the mothership on a smaller project as a proof of concept. Demonstrate results.</p>\n\n<p>Or, if you really want to be ballsy, go stealth. Fly under the radar and demonstrate real results. That’s the approach the Start.com team has used while Getting Real at Microsoft. “I’ve watched the Start.com team work. They don’t ask permission,” says Robert Scoble, Technical Evangelist at Microsoft. “They have a boss that provides air cover. And they bite off a little bit at a time and do that and respond to feedback.”</p>\n\n<h3 id=\"shipping-microsofts-startcom\">Shipping Microsoft’s Start.com</h3>\n\n<blockquote>\n  <p>In big companies, processes and meetings are the norm. Many months are spent on planning features and arguing details with the goal of everyone reaching an agreement on what is the “right” thing for the customer.</p>\n\n  <p>That may be the right approach for shrink-wrapped software, but with the web we have an incredible advantage. Just ship it! Let the user tell you if it’s the right thing and if it’s not, hey you can fix it and ship it to the web the same day if you want! There is no word stronger than the customer’s — resist the urge to engage in long-winded meetings and arguments. Just ship it and prove a point.</p>\n\n  <p>Much easier said than done — this implies:</p>\n\n  <p><em>Months of planning are not necessary.</em>  <br/>\nMonths of writing specs are not necessary — specs should have the foundations nailed and details figured out and refined during the development phase. Don’t try to close all open issues and nail every single detail before development starts.</p>\n\n  <p><em>Ship less features, but quality features.</em>  <br/>\nYou don’t need a big bang approach with a whole new release and bunch of features. Give the users byte-size pieces that they can digest.</p>\n\n  <p>If there are minor bugs, ship it as soon you have the core scenarios nailed and ship the bug fixes to web gradually after that. The faster you get the user feedback the better. Ideas can sound great on paper but in practice turn out to be suboptimal. The sooner you find out about fundamental issues that are wrong with an idea, the better.</p>\n\n  <p>Once you iterate quickly and react on customer feedback, you will establish a customer connection. Remember the goal is to win the customer by building what they want.</p>\n</blockquote>\n\n<p>—Sanaz Ahari, Program Manager of <a href=\"http://www.start.com/\">Start.com</a>, <a href=\"http://www.microsoft.com/\">Microsoft</a></p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/01.3-caveats-disclaimers-and-other-preemptive-strikes",
					},
				},
			},
			2: Section{
				Number: 2,
				Title:  "The Starting Line",
				Chapters: map[int]Chapter{
					4: Chapter{
						Number:  4,
						Title:   "Build Less",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"underdo-your-competition\">Underdo your competition</h2>\n\n<p>Conventional wisdom says that to beat your competitors you need to one-up them. If they have four features, you need five (or 15, or 25). If they’re spending x, you need to spend xx. If they have 20, you need 30.</p>\n\n<p>This sort of one-upping Cold War mentality is a dead-end. It’s an expensive, defensive, and paranoid way of building products. Defensive, paranoid companies can’t think ahead, they can only think behind. They don’t lead, they follow.</p>\n\n<p><em>If you want to build a company that follows, you might as well put down this book now.</em></p>\n\n<p>So what to do then? The answer is less. Do less than your competitors to beat them. Solve the simple problems and leave the hairy, difficult, nasty problems to everyone else. Instead of one-upping, try one-downing. Instead of outdoing, try underdoing.</p>\n\n<p>We’ll cover the concept of less throughout this book, but for starters, less means:</p>\n\n<ul>\n  <li>Less features</li>\n  <li>Less options/preferences</li>\n  <li>Less people and corporate structure</li>\n  <li>Less meetings and abstractions</li>\n  <li>Less promises</li>\n</ul>\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/02.1-build-less",
					},
					5: Chapter{
						Number:  5,
						Title:   "What’s Your Problem?",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"build-software-for-yourself\">Build software for yourself</h2>\n\n<p>A great way to build software is to start out by solving your own problems. You’ll be the target audience and you’ll know what’s important and what’s not. That gives you a great head start on delivering a breakout product.</p>\n\n<p>The key here is understanding that you’re not alone. If you’re having this problem, it’s likely hundreds of thousands of others are in the same boat. There’s your market. Wasn’t that easy?</p>\n\n<p>Basecamp originated in a problem: As a design firm we needed a simple way to communicate with our clients about projects. We started out doing this via client extranets which we would update manually. But changing the html by hand every time a project needed to be updated just wasn’t working. These project sites always seemed to go stale and eventually were abandoned. It was frustrating because it left us disorganized and left clients in the dark.</p>\n\n<p>So we started looking at other options. Yet every tool we found either 1) didn’t do what we needed or 2) was bloated with features we didn’t need — like billing, strict access controls, charts, graphs, etc. We knew there had to be a better way so we decided to build our own.</p>\n\n<p>When you solve your own problem, you create a tool that you’re passionate about. And passion is key. Passion means you’ll truly use it and care about it. And that’s the best way to get others to feel passionate about it too.</p>\n\n<h3 id=\"scratching-your-own-itch\">Scratching your own itch</h3>\n\n<blockquote>\n  <p>The Open Source world embraced this mantra a long time ago — they call it “scratching your own itch.” For the open source developers, it means they get the tools they want, delivered the way they want them. But the benefit goes much deeper.</p>\n\n  <p>As the designer or developer of a new application, you’re faced with hundreds of micro-decisions each and every day: blue or green? One table or two? Static or dynamic? Abort or recover? How do we make these decisions? If it’s something we recognize as being important, we might ask. The rest, we guess. And all that guessing builds up a kind of debt in our applications — an interconnected web of assumptions.</p>\n\n  <p>As a developer, I hate this. The knowledge of all these small-scale timebombs in the applications I write adds to my stress. Open Source developers, scratching their own itches, don’t suffer this. Because they are their own users, they know the correct answers to 90% of the decisions they have to make. I think this is one of the reasons folks come home after a hard day of coding and then work on open source: It’s relaxing.</p>\n</blockquote>\n\n<p>—Dave Thomas, <a href=\"http://www.pragmaticprogrammer.com/\">The Pragmatic Programmers</a></p>\n\n<h3 id=\"born-out-of-necessity\">Born out of necessity</h3>\n\n<blockquote>\n  <p>Campaign Monitor really was born out of necessity. For years we’d been frustrated by the quality of the email marketing options out there. One tool would do x and y but never z, the next had y and z nailed but just couldn’t get x right. We couldn’t win.</p>\n\n  <p>We decided to clear our schedule and have a go at building our dream email marketing tool. We consciously decided not to look at what everyone else was doing and instead build something that would make ours and our customer’s lives a little easier.</p>\n\n  <p>As it turned out, we weren’t the only ones who were unhappy with the options out there. We made a few modifications to the software so any design firm could use it and started spreading the word. In less than six months, thousands of designers were using Campaign Monitor to send email newsletters for themselves and their clients.</p>\n</blockquote>\n\n<p>—David Greiner, founder, <a href=\"http://www.campaignmonitor.com/\">Campaign Monitor</a></p>\n\n<h3 id=\"you-need-to-care-about-it\">You need to care about it</h3>\n\n<blockquote>\n  <p>When you write a book, you need to have more than an interesting story. You need to have a desire to tell the story. You need to be personally invested in some way. If you’re going to live with something for two years, three years, the rest of your life, you need to care about it.</p>\n</blockquote>\n\n<p>—Malcolm Gladwell, author (from <a href=\"https://www.powells.com/author/malcolm-gladwell\">A Few Thin Slices of Malcolm Gladwell</a>)</p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/02.2-whats-your-problem",
					},
					6: Chapter{
						Number:  6,
						Title:   "Fund Yourself",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"outside-money-is-plan-b\">Outside money is plan B</h2>\n\n<p>The first priority of many startups is acquiring funding from investors. But remember, if you turn to outsiders for funding, you’ll have to answer to them too. Expectations are raised. Investors want their money back — and quickly. The sad fact is cashing in often begins to trump building a quality product.</p>\n\n<p>These days it doesn’t take much to get rolling. Hardware is cheap and plenty of great infrastructure software is open source and free. And passion doesn’t come with a price tag.</p>\n\n<p>So do what you can with the cash on hand. Think hard and determine what’s really essential and what you can do without. What can you do with three people instead of ten? What can you do with $20k instead of $100k? What can you do in three months instead of six? What can you do if you keep your day job and build your app on the side?</p>\n\n<h2 id=\"constraints-force-creativity\">Constraints force creativity</h2>\n\n<p>Run on limited resources and you’ll be forced to reckon with constraints earlier and more intensely. And that’s a good thing. Constraints drive innovation.</p>\n\n<p>Constraints also force you to get your idea out in the wild sooner rather than later — another good thing. A month or two out of the gates you should have a pretty good idea of whether you’re onto something or not. If you are, you’ll be self-sustainable shortly and won’t need external cash. If your idea’s a lemon, it’s time to go back to the drawing board. At least you know now as opposed to months (or years) down the road. And at least you can back out easily. Exit plans get a lot trickier once investors are involved.</p>\n\n<p>If you’re creating software just to make a quick buck, it will show. Truth is a quick payout is pretty unlikely. So focus on building a quality tool that you and your customers can live with for a long time.</p>\n\n<h3 id=\"two-paths\">Two paths</h3>\n\n<blockquote>\n  <p>[Jake Walker started one company with investor money (<a href=\"https://web.archive.org/web/20050213112406/http://www.disclive.com/\">Disclive</a>) and one without (<a href=\"https://web.archive.org/web/20060425061839/http://www.theshowlive.com/\">The Show</a>). Here he discusses the differences between the two paths.]</p>\n\n  <p>The root of all the problems wasn’t raising money itself, but everything that came along with it. The expectations are simply higher. People start taking salary, and the motivation is to build it up and sell it, or find some other way for the initial investors to make their money back. In the case of the first company, we simply started acting much bigger than we were — out of necessity…</p>\n\n  <p>[With The Show] we realized that we could deliver a much better product with less costs, only with more time. And we gambled with a bit of our own money that people would be willing to wait for quality over speed. But the company has stayed (and will likely continue to be) a small operation. And ever since that first project, we’ve been fully self-funded. With just a bit of creative terms from our vendors, we’ve never really need to put much of our own money into the operation at all. And the expectation isn’t to grow and sell, but to grow for the sake of growth and to continue to benefit from it financially.</p>\n</blockquote>\n\n<p>—A comment from <a href=\"http://www.37signals.com/svn/archives2/entrepreneurs_angels_and_the_cost_of_launch.php\">Signal vs. Noise</a></p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/02.3-fund-yourself",
					},
					7: Chapter{
						Number:  7,
						Title:   "Fix Time and Budget, Flex Scope",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"launch-on-time-and-on-budget\">Launch on time and on budget</h2>\n\n<p>Here’s an easy way to launch on time and on budget: keep them fixed. Never throw more time or money at a problem, just scale back the scope.</p>\n\n<p>There’s a myth that goes like this: we can launch on time, on budget, and on scope. It almost never happens and when it does quality often suffers.</p>\n\n<p>If you can’t fit everything in within the time and budget allotted then don’t expand the time and budget. Instead, pull back the scope. There’s always time to add stuff later — later is eternal, now is fleeting.</p>\n\n<p>Launching something great that’s a little smaller in scope than planned is better than launching something mediocre and full of holes because you had to hit some magical time, budget, and scope window. Leave the magic to Houdini. You’ve got a real business to run and a real product to deliver.</p>\n\n<p>Here are the benefits of fixing time and budget, and keeping scope flexible:</p>\n\n<h3 id=\"prioritization\">Prioritization</h3>\n\n<p>You have to figure out what’s really important. What’s going to make it into this initial release? This forces a constraint on you which will push you to make tough decisions instead of hemming and hawing.</p>\n\n<h3 id=\"reality\">Reality</h3>\n\n<p>Setting expectations is key. If you try to fix time, budget, and scope, you won’t be able to deliver at a high level of quality. Sure, you can probably deliver something, but is “something” what you really want to deliver?</p>\n\n<h3 id=\"flexibility\">Flexibility</h3>\n\n<p>The ability to change is key. Having everything fixed makes it tough to change. Injecting scope flexibility will introduce options based on your real experience building the product. Flexibility is your friend.</p>\n\n<p>Our recommendation: Scope down. It’s better to make half a product than a half-assed product (more on this later).</p>\n\n<h3 id=\"one-two-three\">One, two, three…</h3>\n\n<blockquote>\n  <p>How does a project get to be a year behind schedule? One day at a time.</p>\n</blockquote>\n\n<p>—Fred Brooks, <a href=\"http://en.wikipedia.org/wiki/The_Mythical_Man-Month\">software engineer and computer scientist</a></p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/02.4-fix-time-and-budget-flex-scope",
					},
					8: Chapter{
						Number:  8,
						Title:   "Have an Enemy",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"pick-a-fight\">Pick a fight</h2>\n\n<p>Sometimes the best way to know what your app should be is to know what it shouldn’t be. Figure out your app’s enemy and you’ll shine a light on where you need to go.</p>\n\n<p>When we decided to create project management software, we knew Microsoft Project was the gorilla in the room. Instead of fearing the gorilla, we used it as a motivator. We decided Basecamp would be something completely different, the anti-Project.</p>\n\n<p>We realized project management isn’t about charts, graphs, reports and statistics — it’s about communication. It also isn’t about a project manager sitting up high and broadcasting a project plan. It’s about everyone taking responsibility together to make the project work.</p>\n\n<p>Our enemy was the Project Management Dictators and the tools they used to crack the whip. We wanted to democratize project management — make it something everyone was a part of (including the client). Projects turn out better when everyone takes collective ownership of the process.</p>\n\n<p>When it came to Writeboard, we knew there were competitors out there with lots of whizbang features. So we decided to emphasize a “no fuss” angle instead. We created an app that let people share and collaborate on ideas simply, without bogging them down with non-essential features. If it wasn’t essential, we left it out. And in just three months after launch, over 100,000 Writeboards have been created.</p>\n\n<p>When we started on Backpack our enemy was structure and rigid rules. People should be able to organize their information their own way — not based on a series of preformatted screens or a plethora of required form fields.</p>\n\n<p>One bonus you get from having an enemy is a very clear marketing message. People are stoked by conflict. And they also understand a product by comparing it to others. With a chosen enemy, you’re feeding people a story they want to hear. Not only will they understand your product better and faster, they’ll take sides. And that’s a sure-fire way to get attention and ignite passion.</p>\n\n<p>Now with all that said, it’s also important to not get too obsessed with the competition. Overanalyze other products and you’ll start to limit the way you think. Take a look and then move on to your own vision and your own ideas.</p>\n\n<h3 id=\"dont-follow-the-leader\">Don’t follow the leader</h3>\n\n<blockquote>\n  <p>Marketers (and all human beings) are well trained to follow the leader. The natural instinct is to figure out what’s working for the competition and then try to outdo it — to be cheaper than your competitor who competes on price, or faster than the competitor who competes on speed. The problem is that once a consumer has bought someone else’s story and believes that lie, persuading the consumer to switch is the same as persuading him to admit he was wrong. And people hate admitting that they’re wrong.</p>\n\n  <p>Instead, you must tell a different story and persuade listeners that your story is more important than the story they currently believe. If your competition is faster, you must be cheaper. If they sell the story of health, you must sell the story of convenience. Not just the positioning x/y axis sort of “We are cheaper” claim, but a real story that is completely different from the story that’s already being told.</p>\n</blockquote>\n\n<p>—<a href=\"http://sethgodin.typepad.com/\">Seth Godin</a>, author/entrepreneur (from <a href=\"https://web.archive.org/web/20091125230832/http://www.moveahead1.com/articles/article_details.asp?id=33\">Be a Better Liar</a>)</p>\n\n<h3 id=\"whats-the-key-problem\">What’s the key problem?</h3>\n\n<blockquote>\n  <p>One of the quickest ways to get yourself into trouble is to look at what your competitors are doing. This has been especially true for us at BlinkList. Since we launched there have been about 10 other social bookmarking services that have been launched. Some people have even started to generate spreadsheets online with a detailed feature by feature comparison.</p>\n\n  <p>However, this can quickly lead one astray. Instead, we stay focused on the big picture and keep asking ourselves, what is the key problem we are trying to solve and how can we solve it.</p>\n</blockquote>\n\n<p>—Michael Reining, co-founder, <a href=\"http://www.mindvalley.com/\">MindValley</a> &amp; <a href=\"http://www.blinklist.com/\">Blinklist</a></p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/02.5-have-an-enemy",
					},
					9: Chapter{
						Number:  9,
						Title:   "It Shouldn’t be a Chore",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"your-passion--or-lack-of--will-shine-through\">Your passion — or lack of — will shine through</h2>\n\n<p>The less your app is a chore to build, the better it will be. Keep it small and managable so you can actually enjoy the process.</p>\n\n<p>If your app doesn’t excite you, something’s wrong. If you’re only working on it in order to cash out, it will show. Likewise, if you feel passionately about your app, it will come through in the final product. People can read between the lines.</p>\n\n<h3 id=\"the-presence-of-passion\">The presence of passion</h3>\n\n<blockquote>\n  <p>In design, where meaning is often controversially subjective or painfully inscrutable, few things are more apparent and lucid than the presence of passion. This is true whether the design of a product delights you or leaves you cold; in either case it’s difficult not to detect the emotional investment of the hands that built it.</p>\n\n  <p>Enthusiasm manifests itself readily of course, but indifference is equally indelible. If your commitment doesn’t encompass a genuine passion for the work at hand, it becomes a void that is almost impossible to conceal, no matter how elaborately or attractively designed it is.</p>\n</blockquote>\n\n<p>—Khoi Vinh, <a href=\"http://www.subtraction.com/\">Subtraction.com</a></p>\n\n<h3 id=\"the-bakery\">The bakery</h3>\n\n<blockquote>\n  <p>American business at this point is really about developing an idea, making it profitable, selling it while it’s profitable and then getting out or diversifying. It’s just about sucking everything up. My idea was: Enjoy baking, sell your bread, people like it, sell more. Keep the bakery going because you’re making good food and people are happy.</p>\n</blockquote>\n\n<p>—Ian MacKaye, member of Fugazi and co-owner of Dischord Records  <br/>\n(from <a href=\"https://www.salon.com/2001/01/08/mackaye/\">Salon.com People | Ian MacKaye</a>)</p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/02.6-it-shouldnt-be-a-chore",
					},
				},
			},
			3: Section{
				Number: 3,
				Title:  "Stay Lean",
				Chapters: map[int]Chapter{
					10: Chapter{
						Number:  10,
						Title:   "Less Mass",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"the-leaner-you-are-the-easier-it-is-to-change\">The leaner you are, the easier it is to change</h2>\n\n<p>The more massive an object, the more energy is required to change its direction. It’s as true in the business world as it is in the physical world.</p>\n\n<p>When it comes to web technology, change must be easy and cheap. If you can’t change on the fly, you’ll lose ground to someone who can. That’s why you need to shoot for less mass.</p>\n\n<h2 id=\"mass-is-increased-by\">Mass is increased by…</h2>\n\n<ul>\n  <li>Long term contracts</li>\n  <li>Excess staff</li>\n  <li>Permanent decisions</li>\n  <li>Meetings about other meetings</li>\n  <li>Thick process</li>\n  <li>Inventory (physical or mental)</li>\n  <li>Hardware, software, technology lock-ins</li>\n  <li>Proprietary data formats</li>\n  <li>The past ruling the future</li>\n  <li>Long-term roadmaps</li>\n  <li>Office politics</li>\n</ul>\n\n<h2 id=\"mass-is-reduced-by\">Mass is reduced by…</h2>\n\n<ul>\n  <li>Just-in-time thinking</li>\n  <li>Multi-tasking team members</li>\n  <li>Embracing constraints, not trying to lift them</li>\n  <li>Less software, less code</li>\n  <li>Less features</li>\n  <li>Small team size</li>\n  <li>Simplicity</li>\n  <li>Pared-down interfaces</li>\n  <li>Open-source products</li>\n  <li>Open data formats</li>\n  <li>An open culture that makes it easy to admit mistakes</li>\n</ul>\n\n<p>Less mass lets you change direction quickly. You can react and evolve. You can focus on the good ideas and drop the bad ones. You can listen and respond to your customers. You can integrate new technologies now instead of later. Instead of an aircraft carrier, you steer a cigarette boat. Revel in that fact.</p>\n\n<p>For example, let’s imagine a lean, less-mass company that has built a product with less software and less features. On the other side is a more-mass company that’s got a product with significantly more software and more features. Then let’s say a new technology like Ajax or a new concept like tagging comes around. Who is going to be able to adapt their product quicker? The team with more software and more features and a 12-month roadmap or the team with less software and less features and a more organic “let’s focus on what we need to focus on right now” process?</p>\n\n<p>Obviously the less-mass company is in a better position to adjust to the real demands of the marketplace. The more-mass company will likely still be discussing changes or pushing them through its bureaucratic process long after the less-mass company has made the switch. The less-mass company will be two steps ahead while the more-mass company is still figuring out how to walk.</p>\n\n<p>Nimble, agile, less-mass businesses can quickly change their entire business model, product, feature set, and marketing message. They can make mistakes and fix them quickly. They can change their priorities, product mix, and focus. And, most importantly, <strong>they can change their minds</strong>.</p>\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/03.1-less-mass",
					},
					11: Chapter{
						Number:  11,
						Title:   "Lower Your Cost of Change",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"stay-flexible-by-reducing-obstacles-to-change\">Stay flexible by reducing obstacles to change</h2>\n\n<p>Change is your best friend. The more expensive it is to make a change, the less likely you’ll make it. And if your competitors can change faster than you, you’re at a huge disadvantage. If change gets too expensive, you’re dead.</p>\n\n<p>Here’s where staying lean really helps you out. The ability to change on a dime is one thing small teams have by default that big teams can never have. This is where the big guys envy the little guys. What might take a big team in a huge organization weeks to change may only take a day in a small, lean organization. That advantage is priceless. Cheap and fast changes are small’s secret weapon.</p>\n\n<p>And remember: All the cash, all the marketing, all the people in the world can’t buy the agility you get from being small.</p>\n\n<p>When it comes to web technology, change must be easy and cheap. If you can’t change on the fly, you’ll lose ground to someone who can. That’s why you need to shoot for less mass.</p>\n\n<h3 id=\"emergence\">Emergence</h3>\n\n<blockquote>\n  <p>Emergence is one of the founding principles of agility, and is the closest one to pure magic. Emergent properties aren’t designed or built in, they simply happen as a dynamic result of the rest of the system. “Emergence” comes from middle 17th century Latin in the sense of an “unforeseen occurrence.” You can’t plan for it or schedule it, but you can cultivate an environment where you can let it happen and benefit from it.</p>\n\n  <p>A classic example of emergence lies in the flocking behavior of birds. A computer simulation can use as few as three simple rules (along the lines of “don’t run into each other”) and suddenly you get very complex behavior as the flock wends and wafts its way gracefully through the sky, reforming around obstacles, and so on. None of this advanced behavior (such as reforming the same shape around an obstacle) is specified by the rules; it emerges from the dynamics of the system.</p>\n\n  <p>Simple rules, as with the birds simulation, lead to complex behavior. Complex rules, as with the tax law in most countries, lead to stupid behavior.</p>\n\n  <p>Many common software development practices have the unfortunate side effect of eliminating any chance for emergent behavior. Most attempts at optimization — tying something down very explicitly — reduces the breadth and scope of interactions and relationships, which is the very source of emergence. In the flocking birds example, as with a well-designed system, it’s the interactions and relationships that create the interesting behavior.</p>\n\n  <p>The harder we tighten things down, the less room there is for a creative, emergent solution. Whether it’s locking down requirements before they are well understood or prematurely optimizing code, or inventing complex navigation and workflow scenarios before letting end users play with the system, the result is the same: an overly complicated, stupid system instead of a clean, elegant system that harnesses emergence.</p>\n\n  <p>Keep it small. Keep it simple. Let it happen.</p>\n</blockquote>\n\n<p>—Andrew Hunt, <a href=\"http://www.pragmaticprogrammer.com/\">The Pragmatic Programmers</a></p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/03.2-lower-your-cost-of-change",
					},
					12: Chapter{
						Number:  12,
						Title:   "The Three Musketeers",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"use-a-team-of-three-for-version-10\">Use a team of three for version 1.0</h2>\n\n<p>For the first version of your app, start with only three people. That’s the magic number that will give you enough manpower yet allow you to stay streamlined and agile. Start with a developer, a designer, and a sweeper (someone who can roam between both worlds).</p>\n\n<p>Now sure, it’s a challenge to build an app with only a few people. But if you’ve got the right team, it’s worth it. Talented people don’t need endless resources. They thrive on the challenge of working within restraints and using their creativity to solve problems. Your lack of manpower means you’ll be forced to deal with tradeoffs earlier in the process — and that’s alright. It will make you figure out your priorities earlier rather than later. And you’ll be able to communicate without constantly having to worry about leaving people out of the loop.</p>\n\n<p>If you can’t build your version one with three people, then you either need different people or need to slim down your initial version. Remember, it’s ok to keep your first version small and tight. You’ll quickly get to see if your idea has wings and, if it does, you’ll have a clean, simple base to build on.</p>\n\n<h3 id=\"metcalfes-law-and-project-teams\">Metcalfe’s Law and project teams</h3>\n\n<blockquote>\n  <p>Keep the team as small as possible. Metcalfe’s Law, that “the value of a communication system grows at approximately the square of the number of users of the system,” has a corollary when it comes to project teams: The efficiency of the team is approximately the inverse of the square of the number of members in the team. I’m beginning to think three people is optimal for a 1.0 product release…Start out by reducing the number of people you plan to add to the team, and then reduce some more.</p>\n</blockquote>\n\n<p>—Marc Hedlund, entrepreneur-in-residence at <a href=\"http://www.oreilly.com/\">O’Reilly Media</a></p>\n\n<div class=\"page-break\"></div>\n<h3 id=\"communication-flow\">Communication flow</h3>\n\n<blockquote>\n  <p>Communication flows more easily on small teams than large teams. If you’re the only person on a project, communication is simple. The only communication path is between you and the customer. As the number of people on a project increases, however, so does the number of communication paths. It doesn’t increase additively, as the number of people increases, it increases multiplicatively, proportional to the square of the number of people.</p>\n</blockquote>\n\n<p>—Steve McConnell, Chief Software Engineer at Construx Software Builders Inc. (from <a href=\"http://www.stevemcconnell.com/articles/art06.htm\">Less is More: Jumpstarting Productivity with Small Teams</a>)</p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/03.3-the-three-musketeers",
					},
					13: Chapter{
						Number:  13,
						Title:   "Embrace Constraints",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"let-limitations-guide-you-to-creative-solutions\">Let limitations guide you to creative solutions</h2>\n\n<p>There’s never enough to go around. Not enough time. Not enough money. Not enough people.</p>\n\n<p><em>That’s a good thing.</em></p>\n\n<p>Instead of freaking out about these constraints, embrace them. Let them guide you. Constraints drive innovation and force focus. Instead of trying to remove them, use them to your advantage.</p>\n\n<p>When we were building Basecamp, we had plenty of limitations. We had:</p>\n\n<ul>\n  <li>A design firm to run</li>\n  <li>Existing client work</li>\n  <li>A 7-hour time difference (David was doing the programming in Denmark, the rest of us were in the States)</li>\n  <li>A small team</li>\n  <li>No outside funding</li>\n</ul>\n\n<p>We felt the “not enough” blues. So we kept our plate small. That way we could only put so much on it. We took big tasks and broke them up into small bits that we tackled one at a time. We moved step by step and prioritized as we went along.</p>\n\n<p>That forced us to come up with creative solutions. We lowered our cost of change by always building less software. We gave people just enough features to solve their own problems their own way — and then we got out of the way. The time difference and distance between us made us more efficient in our communication. Instead of meeting in person, we communicated almost exclusively via im and email which forced us to get to the point quickly.</p>\n\n<p>Constraints are often advantages in disguise. Forget about venture capital, long release cycles, and quick hires. Instead, work with what you have.</p>\n\n<h3 id=\"fight-blight\">Fight blight</h3>\n\n<blockquote>\n  <p>What has been described as “creeping elegance” is probably better described as “feature blight,” for like a fungus on a plant it gradually elaborates and blurs the true outline of the product while it drains its sap. The antidote to feature blight is, of course, the “constricting deadline.” This results in features being discarded in proportion to the time it would take to implement them. It is often the case that the most useful features take the longest to implement. Thus the combination of the blight and the deadline yields software as we know and love it, comprised of bountiful quantities of useless features.</p>\n</blockquote>\n\n<p>—Jef Raskin, author (from <a href=\"https://web.archive.org/web/20070207033831/http://jef.raskincenter.org/unpublished/widgets_of_the_week.html#anchor1152335\">“Why Software Is the Way It Is”</a>)</p>\n\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/03.4-embrace-constraints",
					},
					14: Chapter{
						Number:  14,
						Title:   "Be Yourself",
						Content: "\n      <template data-target=\"anchors.iconTemplate\"><svg class=\"icon icon--link\" viewBox=\"0 0 85.69 85.69\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m49.71 65.61c.78 0 1.25.14 1.42.42s0 .69-.59 1.25l-11.71 11.72a21.94 21.94 0 0 1 -16.07 6.69 21.94 21.94 0 0 1 -16.07-6.69 22.65 22.65 0 0 1 0-32.14l16.07-16.07a21.38 21.38 0 0 1 5.52-4 21.55 21.55 0 0 1 10.55-2.69h.33a26.68 26.68 0 0 1 8.37 1.67v.17a13.49 13.49 0 0 1 2.85 1.34 22.09 22.09 0 0 1 4.52 3.51 5.69 5.69 0 1 1 -8 8 11.31 11.31 0 0 0 -16.07 0l-16.1 16.11a11.3 11.3 0 0 0 0 16.06 10.92 10.92 0 0 0 8 3.35 10.92 10.92 0 0 0 8-3.35l6.53-6.52c.45-.45 1.62-.39 3.52.16a29.76 29.76 0 0 0 8.93 1.01zm13.22-65.61a21.94 21.94 0 0 1 16.07 6.69 21.94 21.94 0 0 1 6.69 16.07 21.92 21.92 0 0 1 -6.69 16.07l-16.07 16.07a22.23 22.23 0 0 1 -11.72 6.19c-.44.11-1 .22-1.5.33a14.75 14.75 0 0 1 -2.51.17 18.79 18.79 0 0 1 -2.51-.17c-1-.11-1.79-.22-2.35-.33-1-.22-1.67-.39-2-.5a22.66 22.66 0 0 1 -9.54-5.69 5.69 5.69 0 1 1 8-8 11.31 11.31 0 0 0 16.07 0l16.13-16.11a11 11 0 0 0 3.35-8 11 11 0 0 0 -3.35-8 11.3 11.3 0 0 0 -16.06 0l-6.7 6.69c-.45.45-1.62.39-3.51-.16a29.83 29.83 0 0 0 -8.87-1c-.79.11-1.26 0-1.43-.33s0-.78.59-1.34l11.84-11.96a21.92 21.92 0 0 1 16.07-6.69z\"></path></svg></template>\n      <template data-target=\"tweet.iconTemplate\"><svg class=\"icon icon--twitter\" viewBox=\"0 0 101.53 82.49\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m91 20.62a18.68 18.68 0 0 1 .19 2.58 58.44 58.44 0 0 1 -4 20.92 66.22 66.22 0 0 1 -11.2 19 53.33 53.33 0 0 1 -18.84 14 59.6 59.6 0 0 1 -25.28 5.35 58.34 58.34 0 0 1 -31.87-9.3c1.72.13 3.37.2 5 .2a40.78 40.78 0 0 0 26-8.92 19.07 19.07 0 0 1 -12-4.07 20.6 20.6 0 0 1 -7.3-10.38 20.75 20.75 0 0 0 4.16.4 26.41 26.41 0 0 0 5.95-.6 18.82 18.82 0 0 1 -11.2-7.24 21.21 21.21 0 0 1 -4.26-13.21v-.35c0 .79.89 1.42 2.67 1.88a22.14 22.14 0 0 0 5.65.7 25.41 25.41 0 0 1 -7.53-7.58 17.48 17.48 0 0 1 -3-9.71 21.19 21.19 0 0 1 2.8-10.52 59.45 59.45 0 0 0 19.14 15.46 57.54 57.54 0 0 0 23.92 6.35 19.39 19.39 0 0 1 -.59-4.76 20 20 0 0 1 6.11-14.67 20.84 20.84 0 0 1 29.94.39 44.74 44.74 0 0 0 13.29-4.95 20.48 20.48 0 0 1 -9.32 11.5 42.27 42.27 0 0 0 12.1-3.37 45.93 45.93 0 0 1 -10.53 10.9z\"></path></svg></template>\n\n      <h2 id=\"differentiate-yourself-from-bigger-companies-by-being-personal-and-friendly\">Differentiate yourself from bigger companies by being personal and friendly</h2>\n\n<p>A lot of small companies make the mistake of trying to act big. It’s as if they perceive their size as a weakness that needs to be covered up. Too bad. Being small can actually be a huge advantage, especially when it comes to communication.</p>\n\n<p>Small companies enjoy fewer formalities, less bureaucracy, and more freedom. <strong>Smaller companies are closer to the customer by default</strong>. That means they can communicate in a more direct and personal way with customers. If you’re small, you can use familiar language instead of jargon. Your site and your product can have a human voice instead of sounding like a corporate drone. Being small means you can talk with your customers, not down to them.</p>\n\n<p>There are also advantages to internal communications at small companies too. You can ditch formalities. There’s no need for arduous processes and multiple sign-offs on everything. Everyone in the process can speak openly and honestly. This unfettered flow of ideas is one of the big advantages of staying small.</p>\n\n<h3 id=\"be-proudly-defiantly-truthful\">Be proudly, defiantly truthful</h3>\n\n<blockquote>\n  <p>Though you may think that a customer can be fooled by exaggerations on the number of staffers in your company or the breadth of your offerings, the smart ones, the ones you really want, will always learn the truth – whether through intuition or deduction. Embarrassingly, I’ve been a part of white lies like this in the past, and none of those situations ever resulted in what matters most to a business: meaningful, lasting and mutually beneficial relationships with people who had a real need for the services offered. The better course would have been to be proudly, defiantly truthful about the exact size and breadth of the company.</p>\n</blockquote>\n\n<p>–Khoi Vinh, <a href=\"https://www.subtraction.com\">Subtraction.com</a> and co-founder of Behavior LLC</p>\n\n<h3 id=\"any-time-at-all\">Any time at all</h3>\n\n<blockquote>\n  <p>No matter what business you are in, good customer service has got to be the biggest request that any client will ever make. We demand it for the services we use so why would we think our customers would be any different? From the very beginning we made it easy and transparent for our customers to get in touch with us for any number or questions they might have. On our website we list a toll-free number that forwards to our mobile phones and on our business cards each of us list our mobile numbers. We emphasize to our customers that they can get in touch with us any time no matter what the problem might be. Our customers appreciate this level of trust and no one has ever abused this service.</p>\n</blockquote>\n\n<p>–Edward Knittel, Director of Sales and Marketing, <a href=\"https://web.archive.org/web/20120114021727/http://www.kennelsource.com/\">KennelSource</a></p>\n\n\n      \n\n      \n    ",
						URL:     "https://basecamp.com/gettingreal/03.5-be-yourself",
					},
				},
			},
		},
	},
}

func createEpub(b *Book) error {
	e := epub.NewEpub(b.Title)
	e.SetAuthor(strings.Join(b.Authors[:], ", "))
	e.SetDescription(b.Description)

	coverImagePath, _ := e.AddImage("getting_real_cover.png", "cover.png")
	e.SetCover(coverImagePath, "")

	var sKeys []int
	for k := range b.Summary.Sections {
		sKeys = append(sKeys, k)
	}
	sort.Ints(sKeys)

	for _, sk := range sKeys {
		section := b.Summary.Sections[sk]
		sFilename := convertToFilename(section.Title)
		// sectionBody := fmt.Sprintf("<h1 style='text-align: center; margin-top: 50%%;'> %d. %s </h1>", section.Number, section.Title)
		sectionBody := fmt.Sprintf("<h1 style='text-align: center;'> %d. %s </h1>", section.Number, section.Title)
		link, _ := e.AddSection(sectionBody, section.Title, sFilename, "")

		repr.Println(link)

		fmt.Printf(">> Add section %d: %s\n", sk, section.Title)

		var cKeys []int
		for k := range section.Chapters {
			cKeys = append(cKeys, k)
		}
		slices.Sort(cKeys)

		for _, ck := range cKeys {
			chapter := section.Chapters[ck]
			fmt.Printf(">>>> Add chapter %d: %s\n", ck, chapter.Title)
			cFilename := convertToFilename(chapter.Title)
			chapterTitleH1 := fmt.Sprintf("<h1>Chapter %d: %s</h1>", chapter.Number, chapter.Title)
			chapterBody := fmt.Sprintf("%s%s", chapterTitleH1, chapter.Content)
			secRef, err := e.AddSubSection(sFilename, chapterBody, chapter.Title, cFilename, "")

			repr.Println(err)
			repr.Println(secRef)
		}
	}

	return e.Write("getting_real.epub")
}

func convertToFilename(s string) string {
	return strings.ReplaceAll(s, " ", "_")
}

var sel = map[string]string{
	"mainContent":             "main#main > div.content",
	"section":                 "div.toc__part",
	"sectionTitle":            "h2.toc__part-title",
	"sectionChapters":         "ul.toc__chapters",
	"chapter":                 "li.toc__chapter",
	"chapterListNumber":       "p.toc__chapter-number",
	"chapterListAnchor":       "h3.toc__chapter-title > a",
	"chapterPageHeader":       "div.intro__content",
	"chapterPageHeaderNumber": "p.intro__masthead",
	"chapterPageHeaderTitle":  "h1.intro__title",
	"chapterPageContent":      "main#main > div.content",
	"chapterPageRemoveNav":    "nav.pagination",
	"chapterPageRemoveFooter": "footer.footer",
}

func chapterTitleToNumber(title string) int {
	splitTitle := strings.Split(title, " ")
	converted, _ := strconv.Atoi(splitTitle[1])
	return converted
}

func (chapter *Chapter) buildContent(c *colly.Collector) {
	c.OnHTML(sel["chapterPageContent"], func(e *colly.HTMLElement) {
		e.ForEach(sel["chapterPageRemoveNav"], func(_ int, e *colly.HTMLElement) {
			e.DOM.Remove()
		})
		e.ForEach(sel["chapterPageRemoveFooter"], func(_ int, e *colly.HTMLElement) {
			e.DOM.Remove()
		})
		chapter.Content, _ = e.DOM.Html()
	})
	c.Visit(chapter.URL)
}

func (s *Section) buildChapters(c *colly.Collector, e *colly.HTMLElement) {
	s.Chapters = make(map[int]Chapter)
	colChapter := c.Clone()
	e.ForEach(sel["chapter"], func(_ int, e *colly.HTMLElement) {
		chapter := Chapter{
			Title:  e.ChildText(sel["chapterListAnchor"]),
			Number: chapterTitleToNumber(e.ChildText(sel["chapterListNumber"])),
			URL:    fmt.Sprintf("%s%s", baseURL, e.ChildAttr(sel["chapterListAnchor"], "href")),
		}
		chapter.buildContent(colChapter)
		s.Chapters[chapter.Number] = chapter

		fmt.Printf("-------- BUILD CHAPTER %d: %s\n", chapter.Number, chapter.Title)
	})

	colChapter.OnRequest(func(r *colly.Request) {
		fmt.Println("CHAPTER -- Visiting", r.URL.String())
	})
}

func buildContentFromCrawler(book *Book) {
	var c = colly.NewCollector(colly.AllowedDomains("basecamp.com"))
	book.Summary = Summary{}
	book.Summary.Sections = make(map[int]Section)

	c.OnHTML(sel["mainContent"], func(rootElm *colly.HTMLElement) {
		book.Title = rootElm.ChildText("h1.landing-title")
		book.Description = rootElm.ChildText("p.landing-subtitle")

		rootElm.ForEach(sel["section"], func(sectionCount int, e *colly.HTMLElement) {
			sectionCount++
			section := Section{}
			section.Title = e.ChildText(sel["sectionTitle"])
			section.Number = sectionCount
			fmt.Printf("----- BUILD SECTION: %s\n", section.Title)
			section.buildChapters(c, e)
			book.Summary.Sections[sectionCount] = section
		})
	})

	c.OnRequest(func(r *colly.Request) {
		fmt.Println("Visiting", r.URL.String())
	})
	c.Visit(fmt.Sprintf("%s%s", baseURL, "/gettingreal"))
}

func buildContentFromJson(book *Book) {
	bookBytes, _ := os.ReadFile("book.json")
	json.Unmarshal([]byte(bookBytes), &book)
}

func main() {
	book := &Book{
		Authors: []string{"Basecamp", "37Signals"},
	}

	// buildContentFromCrawler(book)
	// bookJson, _ := json.Marshal(book)
	// fmt.Println(string(bookJson[:]))

	buildContentFromJson(book)
	// repr.Println(book)

	createEpub(book)
}
